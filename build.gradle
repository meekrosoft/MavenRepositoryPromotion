apply plugin: 'groovy'

apply plugin: 'application'
apply plugin: 'maven-publish'

String nexusUrl = 'http://35.158.242.34:8081'
String targetDir = 'target'

def repoList = [
    dev: [
        from: 'N/A',
        target: 'repository/workshop-dev/'
    ],
    test: [
        from: 'repository/workshop-dev/',
        target: 'repository/workshop-test/'
    ],
    staging: [
        from: 'repository/workshop-test/',
        target: 'repository/workshop-staging/'
    ],
    prod: [
        from: 'repository/workshop-staging/',
        target: 'repository/workshop-prod/'
    ]
]

def targetEnvironment, pomFile
if (
    project.hasProperty('targetEnvironment') \
    && project.hasProperty('pomFile')){
        targetEnvironment = project.properties.targetEnvironment
        pomFile = project.properties.pomFile
}
else{
    print('''
        Usage:
            gradlew publish [--info]
            -P targetEnvironment=<targetEnviroment>
            -P pomFile=<pathToPomFile>
        ''')
    throw new InvalidUserDataException("Missing arguments.")
}
println ""

println 'Variables Map:'
def map =[
    'targetEnvironment: ':targetEnvironment,
    'to: ':pomFile
]
map.each{
    k,v -> println "* " + "${k}${v}"
}
println ""


def pomData = new XmlSlurper().parse(pomFile)
//println "Type = " + pomData.artifactId
println "Artifact dependency from pomfile is ${pomData.groupId}:${pomData.artifactId}:${pomData.version}"

repositories {
    maven {
        url "${nexusUrl}/${repoList.get(targetEnvironment).from}"
    }
}


dependencies{
    compile "${pomData.groupId}:${pomData.artifactId}:${pomData.version}"
}

task copyDependencies(type: Copy) {
   from configurations.compile
   into targetDir
}

def someFile = file("${targetDir}/${pomData.artifactId}-${pomData.version}.jar")
artifacts {
    archives someFile
}


publishing.repositories {
    maven {
        url "${nexusUrl}/${repoList.get(targetEnvironment).target}"
        credentials {
            username "$mavenUser"
            password "$mavenPassword"
        }
    }
}


publishing.publications {
    mavenJava(MavenPublication) {
        groupId "${pomData.groupId}"
        artifactId "${pomData.artifactId}"
        version "${pomData.version}"

        artifact(someFile) {
            builtBy copyDependencies
        }
    }
}
